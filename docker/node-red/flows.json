[
    {
        "id": "e2f5c2acc365536e",
        "type": "tab",
        "label": "Flujo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7e2fbe24aef04a13",
        "type": "tab",
        "label": "Flujo 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3cfe8694a710ed3b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "10.20.31.223",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "98080f96533caab2",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ddc1c0627fd181ee",
        "type": "ui_tab",
        "name": "Menu",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f76c8bf541c3d703",
        "type": "ui_group",
        "name": "Temperatura",
        "tab": "ddc1c0627fd181ee",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "abc7f6fdc94ed56c",
        "type": "ui_group",
        "name": "Contador",
        "tab": "ddc1c0627fd181ee",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "925597c527a6a902",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    },
    {
        "id": "d3512d56d88168a7",
        "type": "ui_tab",
        "name": "Graficas",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c55de0b709dbea10",
        "type": "ui_group",
        "name": "Grafica Temperatura",
        "tab": "d3512d56d88168a7",
        "order": 1,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1b2b9feaf4228aec",
        "type": "ui_slider",
        "z": "e2f5c2acc365536e",
        "name": "",
        "label": "Valvula (%)",
        "tooltip": "",
        "group": "abc7f6fdc94ed56c",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 230,
        "y": 380,
        "wires": [
            [
                "7ca4528eda59b5fd",
                "b64bde7c48cb0364"
            ]
        ]
    },
    {
        "id": "a5aa5e8fb2a24336",
        "type": "ui_switch",
        "z": "e2f5c2acc365536e",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "f76c8bf541c3d703",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "03c6d3c558e79726"
            ]
        ]
    },
    {
        "id": "ead2a1aad3824bc1",
        "type": "ui_gauge",
        "z": "e2f5c2acc365536e",
        "name": "",
        "group": "f76c8bf541c3d703",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "ÂºC",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 200,
        "wires": []
    },
    {
        "id": "811b8be2b0b7b86f",
        "type": "mqtt in",
        "z": "e2f5c2acc365536e",
        "name": "",
        "topic": "ambiente/temperatura",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3cfe8694a710ed3b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 200,
        "wires": [
            [
                "ead2a1aad3824bc1"
            ]
        ]
    },
    {
        "id": "03c6d3c558e79726",
        "type": "mqtt out",
        "z": "e2f5c2acc365536e",
        "name": "",
        "topic": "prueba/led_control",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3cfe8694a710ed3b",
        "x": 590,
        "y": 120,
        "wires": []
    },
    {
        "id": "7ca4528eda59b5fd",
        "type": "mqtt out",
        "z": "e2f5c2acc365536e",
        "name": "",
        "topic": "prueba/pwm_duty",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3cfe8694a710ed3b",
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "c6f8f3d271d90757",
        "type": "ui_numeric",
        "z": "e2f5c2acc365536e",
        "name": "",
        "label": "Volumen Total (L)",
        "tooltip": "",
        "group": "abc7f6fdc94ed56c",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "9999",
        "step": 1,
        "className": "",
        "x": 570,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "caf56acbd2946c51",
        "type": "ui_gauge",
        "z": "e2f5c2acc365536e",
        "name": "",
        "group": "abc7f6fdc94ed56c",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Flujo",
        "label": "L/min",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 540,
        "wires": []
    },
    {
        "id": "44625c08b2e0c3ec",
        "type": "mqtt in",
        "z": "e2f5c2acc365536e",
        "name": "",
        "topic": "contador/total2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3cfe8694a710ed3b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 460,
        "wires": [
            [
                "c6f8f3d271d90757"
            ]
        ]
    },
    {
        "id": "99c08cb77290f2e5",
        "type": "mqtt in",
        "z": "e2f5c2acc365536e",
        "name": "",
        "topic": "contador/flujo2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3cfe8694a710ed3b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 560,
        "wires": [
            [
                "caf56acbd2946c51"
            ]
        ]
    },
    {
        "id": "b64bde7c48cb0364",
        "type": "ui_text",
        "z": "e2f5c2acc365536e",
        "group": "abc7f6fdc94ed56c",
        "order": 4,
        "width": 1,
        "height": 1,
        "name": "valor valvula",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 300,
        "wires": []
    },
    {
        "id": "6789abcd1234",
        "type": "function",
        "z": "7e2fbe24aef04a13",
        "name": "Query",
        "func": "const rango = msg.payload;\n//var rango = 'start: 2024-05-16T11:37:00.000Z, stop: 2024-05-16T12:00:00.000Z';\n//var rango = 'start: 2024-05-22T11:37:00Z, stop: 2024-05-22T11:42:00Z';\n//var rango = 'start: -1m'\nmsg.query = 'from(bucket: \"consumo_agua\")' +\n    ' |> range(' + rango + ')' +\n    ' |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")' +\n    ' |> filter(fn: (r) => r[\"_field\"] == \"value\")' +\n    ' |> filter(fn: (r) => r[\"host\"] == \"consumo_agua\")' +\n    ' |> filter(fn: (r) => r[\"topic\"] == \"ambiente/temperatura\")';\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 460,
        "wires": [
            [
                "8c91c3c308089d96"
            ]
        ]
    },
    {
        "id": "8c91c3c308089d96",
        "type": "influxdb in",
        "z": "7e2fbe24aef04a13",
        "influxdb": "925597c527a6a902",
        "name": "InfluxDB",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "udc",
        "x": 760,
        "y": 460,
        "wires": [
            [
                "497ba69829020651"
            ]
        ]
    },
    {
        "id": "497ba69829020651",
        "type": "function",
        "z": "7e2fbe24aef04a13",
        "name": "function 1",
        "func": "var data = msg.payload;\nvar chartData = [];\n\nfor (var i = 0; i < data.length; i++) {\n  var point = data[i];\n  if (point._time && point._value !== undefined) {\n    chartData.push({\n      x: new Date(point._time).getTime(),\n      y: point._value\n    });\n  }\n}\n\nmsg.payload = [{\n    series: [\"Temperature\"],\n    data: [chartData],\n    labels: [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 460,
        "wires": [
            [
                "b404cd79c501be85"
            ]
        ]
    },
    {
        "id": "b404cd79c501be85",
        "type": "ui_chart",
        "z": "7e2fbe24aef04a13",
        "name": "",
        "group": "c55de0b709dbea10",
        "order": 1,
        "width": 15,
        "height": 10,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1070,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "4fda63283190debb",
        "type": "ui_template",
        "z": "7e2fbe24aef04a13",
        "group": "c55de0b709dbea10",
        "name": "Custom Form",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .form-container {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n    }\n\n    .form-row {\n        display: flex;\n        align-items: center;\n        margin-bottom: 10px;\n    }\n\n    .form-row p {\n        margin: 0 10px 0 0;\n        min-width: 60px;\n    }\n\n    .form-row input {\n        margin: 0 10px;\n    }\n\n    .select {\n        margin: 0 10px;\n    }\n</style>\n<div class=\"form-container\">\n    <div class=\"form-row\">\n        <p>Ultimos</p>\n        <select class=\"select\" id=\"intervalSelect\">\n            <option value=\"1m\">1 min</option>\n            <option value=\"3m\">3 min</option>\n            <option value=\"5m\">5 min</option>\n            <option value=\"10m\">10 min</option>\n            <option value=\"30m\">30 min</option>\n            <option value=\"1h\">1 hs</option>\n        </select>\n        <button id=\"lastButton\">Graficar</button>\n    </div>\n    <div class=\"form-row\">\n        <p>Inicio</p>\n        <input type=\"date\" id=\"startDate\">\n        <input type=\"time\" id=\"startTime\" name=\"appt\">\n    </div>\n    <div class=\"form-row\">\n        <p>Fin</p>\n        <input type=\"date\" id=\"stopDate\">\n        <input type=\"time\" id=\"stopTime\" name=\"appt\">\n    </div>\n    <button id=\"customButton\">Graficar</button>\n</div>\n<script>\n    (function(scope) {\n        // FunciÃ³n para formatear la fecha y hora a valores adecuados para los inputs\n        function formatDate(date) {\n            return date.toISOString().split('T')[0];\n        }\n\n        function formatTime(date) {\n            return date.toTimeString().split(' ')[0].substring(0, 5);\n        }\n\n        // Obtener la fecha y hora actuales\n        var now = new Date();\n        // Calcular 5 minutos antes de la fecha y hora actuales\n        var fiveMinutesAgo = new Date(now.getTime() - 5 * 60000);\n\n        // Establecer la fecha y hora actuales por defecto\n        document.getElementById('stopDate').value = formatDate(now);\n        document.getElementById('stopTime').value = formatTime(now);\n\n        // Establecer la fecha y hora de inicio por defecto (5 minutos antes)\n        document.getElementById('startDate').value = formatDate(fiveMinutesAgo);\n        document.getElementById('startTime').value = formatTime(fiveMinutesAgo);\n\n        document.getElementById('customButton').onclick = function() {\n            var startDate = document.getElementById('startDate').value;\n            var startTime = document.getElementById('startTime').value;\n            var stopDate = document.getElementById('stopDate').value;\n            var stopTime = document.getElementById('stopTime').value;\n            scope.send({payload: {type:'interval',startDate: startDate, startTime: startTime, stopDate: stopDate, stopTime: stopTime}});\n        };\n\n        document.getElementById('lastButton').onclick = function() {\n            var selectedInterval = document.getElementById('intervalSelect').value;\n            scope.send({payload: {type:'last',time:selectedInterval}});\n        };\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 260,
        "y": 460,
        "wires": [
            [
                "56365f11f5265605"
            ]
        ]
    },
    {
        "id": "56365f11f5265605",
        "type": "function",
        "z": "7e2fbe24aef04a13",
        "name": "function 2",
        "func": "const dato = msg.payload;\nlet nuevoMsg = 'start: -5m';\n\nif (dato['type'] === 'last') {\n    nuevoMsg = \"start: -\" + dato['time'];\n} else if (dato['type'] === 'interval') {\n    nuevoMsg = 'start: ' + dato['startDate'] + 'T' + dato['startTime'] + ':00Z, stop: ' + dato['stopDate'] + 'T' + dato['stopTime'] + ':00Z';\n}\n\nmsg.payload = nuevoMsg;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 460,
        "wires": [
            [
                "6789abcd1234"
            ]
        ]
    }
]